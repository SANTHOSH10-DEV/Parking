"""tables created in Car and bike parking

Revision ID: 01719a6cf9c3
Revises: 
Create Date: 2024-06-19 14:42:54.864078

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '01719a6cf9c3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('branch',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('name', sa.String(length=30), nullable=True),
#     sa.Column('phone_number', sa.String(length=12), nullable=True),
#     sa.Column('address', sa.String(length=50), nullable=True),
#     sa.Column('maximum_no_bike', sa.Integer(), nullable=True),
#     sa.Column('maximum_no_car', sa.Integer(), nullable=True),
#     sa.Column('updated_date', sa.DateTime(), nullable=True),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.PrimaryKeyConstraint('id'),
#     sa.UniqueConstraint('name')
#     )
#     op.create_table('user',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('first_name', sa.String(length=30), nullable=True),
#     sa.Column('last_name', sa.String(length=30), nullable=True),
#     sa.Column('full_name', sa.String(length=45), nullable=True),
#     sa.Column('phone_number', sa.String(length=12), nullable=True),
#     sa.Column('email_id', sa.String(length=50), nullable=True),
#     sa.Column('password', sa.String(length=100), nullable=True),
#     sa.Column('user_type', mysql.TINYINT(), nullable=True, comment='1->SuperAdmin,2->Admin,3->Employee,4->customer'),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.PrimaryKeyConstraint('id'),
#     sa.UniqueConstraint('full_name'),
#     sa.UniqueConstraint('phone_number')
#     )
#     op.create_table('vehicletype',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('name', sa.String(length=30), nullable=True),
#     sa.Column('amount_per_hour', sa.Float(), nullable=True),
#     sa.Column('date', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.create_index(op.f('ix_vehicletype_id'), 'vehicletype', ['id'], unique=False)
#     op.create_table('api_tokens',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=True),
#     sa.Column('token', sa.String(length=100), nullable=True),
#     sa.Column('validity', mysql.TINYINT(display_width=1), nullable=True, comment='0-Expired, 1- Lifetime'),
#     sa.Column('expires_at', sa.DateTime(), nullable=True),
#     sa.Column('date', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(display_width=1), nullable=True, comment='1-active, -1 inactive, 0- deleted'),
#     sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.create_table('vehicle',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=True),
#     sa.Column('vehicletype_id', sa.Integer(), nullable=True),
#     sa.Column('vehicle_number', sa.String(length=15), nullable=True),
#     sa.Column('brand_name', sa.String(length=40), nullable=True),
#     sa.Column('model', sa.String(length=40), nullable=True),
#     sa.Column('color', sa.String(length=40), nullable=True),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
#     sa.ForeignKeyConstraint(['vehicletype_id'], ['vehicletype.id'], ),
#     sa.PrimaryKeyConstraint('id'),
#     sa.UniqueConstraint('vehicle_number')
#     )
#     op.create_index(op.f('ix_vehicle_id'), 'vehicle', ['id'], unique=False)
#     op.create_table('wallet',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=True),
#     sa.Column('balance', sa.Float(), nullable=True),
#     sa.Column('credit_amount', sa.Float(), nullable=True),
#     sa.Column('updated_at', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.create_index(op.f('ix_wallet_id'), 'wallet', ['id'], unique=False)
#     op.create_table('parkingslotbooking',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=True),
#     sa.Column('branch_name', sa.Integer(), nullable=True),
#     sa.Column('vehicle_number', sa.Integer(), nullable=True),
#     sa.Column('parking_in_time', sa.DateTime(), nullable=True),
#     sa.Column('parking_out_time', sa.DateTime(), nullable=True),
#     sa.Column('fees', sa.Float(), nullable=True),
#     sa.Column('booking_datetime', sa.DateTime(), nullable=True),
#     sa.Column('status', mysql.TINYINT(), nullable=True, comment=" '1:Active', '-1:Inactive', '0:Delete' "),
#     sa.ForeignKeyConstraint(['branch_name'], ['branch.name'], ),
#     sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
#     sa.ForeignKeyConstraint(['vehicle_number'], ['vehicle.vehicle_number'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('parkingslotbooking')
#     op.drop_index(op.f('ix_wallet_id'), table_name='wallet')
#     op.drop_table('wallet')
#     op.drop_index(op.f('ix_vehicle_id'), table_name='vehicle')
#     op.drop_table('vehicle')
#     op.drop_table('api_tokens')
#     op.drop_index(op.f('ix_vehicletype_id'), table_name='vehicletype')
#     op.drop_table('vehicletype')
#     op.drop_table('user')
#     op.drop_table('branch')
#     # ### end Alembic commands ###


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parkingslotbooking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('booking_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parkingslotbooking_id'), 'parkingslotbooking', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_parkingslotbooking_id'), table_name='parkingslotbooking')
    op.drop_table('parkingslotbooking')